$fa-font-path:"webfonts";
@import "scss/fontawesome.scss";
@import "scss/solid.scss";


body {
	text-align:center; background: rgb(167, 167, 167);
}

pre {
	text-align: left;
}

.music-button {
	@extend %fa-icon;
	@extend .fas;
	font-size:1.8em;
	border-radius:10em;
	background: rgb(87, 131, 197);
	color:white;
	cursor:pointer;
	display:inline-block;
	height:2em;
	width:2em;
	text-align:center;
	line-height:2em;
	margin: 2px;
	margin-top: 10px;
	margin-bottom: 5px;
}

.music-play:before { content: fa-content($fa-var-play); }
.music-pause:before { content: fa-content($fa-var-pause); }
.music-forward:before { content: fa-content($fa-var-forward); }
.music-backward:before { content: fa-content($fa-var-backward); }

.music-button:active {
	background-color: rgb(127, 180, 236);
}

.volume-color {
	background: rgb(206, 206, 206);
	border: 1px solid rgb(167, 167, 167);
}

.volume-minus:before { content: fa-content($fa-var-volume-down); }
.volume-plus:before { content: fa-content($fa-var-volume-up); }

.volume-button {
	@extend %fa-icon;
	@extend .fas;
	font-size: 0.7em;
}

.volume-slider {
	border-radius: 20px;
	height:20px;
	margin-top:10px;
	display:inline-block;
	width: 120px;
	margin-left: 0.5em;
}

.volume-slider * {
	background: white;
	border-radius: 20px;
	height:100%;
}

// var artistStyle = @CSS("{ color: rgb(155, 155, 155); font-weight: bold; font-size:0.8em; }");
// var playStateStyle = @CSS("{ color: rgba(0,0,0,0.3); font-size: 0.7em; position: absolute; top:0.2em; right:1em; }");
// var trackStyle = @CSS("{ color: #333; }");

.music-details {
	font-size:1.8em; line-height:1.1em;
}

.task {
	//padding: 0 1em;
	color: white;
}

.task h3 {
	background: rgb(87, 87, 87);
	border-radius: 10px;
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
	margin: 0;
	padding: 0.3em;
	margin-top:1em;
	border-bottom: 1px solid rgb(116, 116, 116);
	font-size: 1.4em;
	font-weight: bold;
}

.task .invisible {
	visibility: hidden;
}

.task.running h3 {
	background: rgb(48, 134, 26);
	border-color: rgb(91, 173, 70);
}

.task .ctl {
	clear: both;
	padding: 0.5em;
	padding-bottom: 1em;
	padding-top: 0;
	background: #333;
	margin: 0 0 2em 0;
}

.task .output {
	margin: 0; padding:0;
	whitespace:pre;
	color: white;
	border-radius: 0;
	text-align: left;
	max-height: 20em;
	overflow:auto;
	background: transparent;
	border: none;

	transition-duration: 0.5s;
	transition-timing-function: ease-in-out;
}

.task .kill {
	background: rgb(228, 66, 66);
	margin-right:1em;
	float: right;
}

.task .ctl .glyphicon {
	font-size:1.5em;
}

.section {
	clear: both;
	background: #eee;
	border-radius: 1em;
	padding-bottom:1.5em;
	position:relative;
	border-radius: 10px;
	border: 1px solid rgb(128, 128, 128);
	//margin: 1em;
}

.section h2 {
	border-top-left-radius: 8px;
	border-top-right-radius: 8px;
	text-align: center;
	color: rgb(255, 255, 255);
	font-weight: bold;
	background: rgb(164, 179, 202);
	border-bottom: 1px solid rgb(132, 155, 168);
	text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.31);
	margin-top:0;
	margin-bottom:20px;
}

.clear {
	clear:both;
}

.global-button {
	float: right;
	background: rgb(95, 95, 95);
	margin-right:1em;
	margin-bottom:0.5em;
	font-size: 1em;
}

/* var Button = (name) -> h.Span(' ', {'class':"glyphicon glyphicon-#{name}"}) .. buttonStyle; */

/* var reconnectButtonStyle = @CSS('{display:block; margin:2em auto 2em auto; padding:1em; font-size:2em;}') */

