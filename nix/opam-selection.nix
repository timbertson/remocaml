### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    opam-commit = "fe7287db1d181301806bfb03d74368b2fc7f567a";
    pkgs = self.pkgs;
    repo = (pkgs.fetchFromGitHub) 
    {
      owner = "ocaml";
      repo = "opam-repository";
      rev = opam-commit;
      sha256 = "0hspp7f66nk4194aladpdzhjb1mizp53q5j7ya6ack5biyrkx4q3";
    };
    repoPath = self.repoPath;
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  opam-commit = opam-commit;
  selection = 
  {
    astring = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0y7bxwdmjwxzad2fhfsvzj3idw4sw4z2zb3n8yr4fkla9s9hbma9";
        package = "packages/astring/astring.0.8.3";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "0ixjwc3plrljvj24za3l9gy0w30lsbggp8yh02lwrzw61ls4cri0";
        url = "http://erratique.ch/software/astring/releases/astring-0.8.3.tbz";
      };
      version = "0.8.3";
    };
    base = 
    {
      opamInputs = 
      {
        base-native-int63 = selection.base-native-int63 or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0q2bkaax0kac47jmgwpxbvzs88dnziac16gqi8gyrq0hlgzvxdla";
        package = "packages/base/base.v0.12.2";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "1nfhy6mfc6i0xagz14arqbww8waqzadqbsa0ip1nfb21g23zma0a";
        url = "https://github.com/janestreet/base/archive/v0.12.2.tar.gz";
      };
      version = "v0.12.2";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base-bytes = selection.base-bytes;
        bos = selection.bos or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        rresult = selection.rresult or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15n02h678ig1w4v35c84bdi43mjrcg5g66f62vi5i4hxn9d8lmrg";
        package = "packages/base64/base64.3.2.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "1jsfhnb4gvg795j0jgac4cpmkxnbkbl98gs7rvh52anj81apswdn";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.2.0/base64-v3.2.0.tbz";
      };
      version = "3.2.0";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:12ykyqa9piw1gny1flsi43qph411alzsm3rr8cgs5ap4drk3xbrd";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    cohttp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        fmt = selection.fmt or null;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
        stringext = selection.stringext;
        uri = selection.uri;
        uri-sexp = selection.uri-sexp;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gc5nr4xpj43cxn4rh44n0wdc6lhz81p1nnpjq7g7y84gjwzlia8";
        package = "packages/cohttp/cohttp.2.3.0";
      };
      pname = "cohttp";
      src = pkgs.fetchurl 
      {
        sha256 = "09bi56ahc3skwv6gmpyhxi4ywsd7yvjivcbg6bl5gk0fs0syqygi";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.3.0/cohttp-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    cohttp-lwt = 
    {
      opamInputs = 
      {
        cohttp = selection.cohttp;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:09mqh2hbrjxr1kaj3cap78dqa9h1iws2njr2x9p1qhpvn7m2r5ms";
        package = "packages/cohttp-lwt/cohttp-lwt.2.3.0";
      };
      pname = "cohttp-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "09bi56ahc3skwv6gmpyhxi4ywsd7yvjivcbg6bl5gk0fs0syqygi";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.3.0/cohttp-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    cohttp-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        cohttp-lwt = selection.cohttp-lwt;
        conduit-lwt-unix = selection.conduit-lwt-unix;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1mv3ad4ns37s51kpkkfqhjz98i8a7a2niy7wndq883rvb6lvc2vv";
        package = "packages/cohttp-lwt-unix/cohttp-lwt-unix.2.3.0";
      };
      pname = "cohttp-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "09bi56ahc3skwv6gmpyhxi4ywsd7yvjivcbg6bl5gk0fs0syqygi";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.3.0/cohttp-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    conduit = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:14k8m9jqjwxjrv4dq33jx5pksx1vljz094zmq52paa3i8lbil0fy";
        package = "packages/conduit/conduit.2.0.1";
      };
      pname = "conduit";
      src = pkgs.fetchurl 
      {
        sha256 = "1fyzpv1lmmr4s71bpk6zn52972hrqml6ka9pfv4y1xxr9fkw3ygs";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.0.1/conduit-v2.0.1.tbz";
      };
      version = "2.0.1";
    };
    conduit-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit = selection.conduit;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0nsx0a5d5aic6gi5kznwh9gw33kj2par76swzqcprhmy929ig6ff";
        package = "packages/conduit-lwt/conduit-lwt.2.0.1";
      };
      pname = "conduit-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1fyzpv1lmmr4s71bpk6zn52972hrqml6ka9pfv4y1xxr9fkw3ygs";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.0.1/conduit-v2.0.1.tbz";
      };
      version = "2.0.1";
    };
    conduit-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit-lwt = selection.conduit-lwt;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        launchd = selection.launchd or null;
        lwt = selection.lwt;
        lwt_ssl = selection.lwt_ssl or null;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        tls = selection.tls or null;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:14h5lrmbjkaycmzy7hmwxlhjmrxqnk4hbw7jzy54bj9bq9pnh9wg";
        package = "packages/conduit-lwt-unix/conduit-lwt-unix.2.0.1";
      };
      pname = "conduit-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1fyzpv1lmmr4s71bpk6zn52972hrqml6ka9pfv4y1xxr9fkw3ygs";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.0.1/conduit-v2.0.1.tbz";
      };
      version = "2.0.1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4 or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-python-2-7 = 
    {
      buildInputs = [ (pkgs."dev-lang/python:2.7" or null)
                       (pkgs."lang/python27" or null) (pkgs.python or null)
                       (pkgs."python/2.7" or null) (pkgs.python2 or null)
                       (pkgs."python2.7" or null) (pkgs.python27 or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0rhcw4z2ba2vhwr5x35g7g8dbaa3msld7rr3sqnydn3zjidj14q5";
        package = "packages/conf-python-2-7/conf-python-2-7.1.0";
      };
      pname = "conf-python-2-7";
      src = null;
      version = "1.0";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    domain-name = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1243f92lmszqdf9qvh1v6wv3jd9r5k2h1fhbqqfw9j3imjdfhw0a";
        package = "packages/domain-name/domain-name.0.3.0";
      };
      pname = "domain-name";
      src = pkgs.fetchurl 
      {
        sha256 = "12kc9p2a2fi1ipc2hyhbzivxpph3npglxwdgvhd6v20rqqdyvnad";
        url = "https://github.com/hannesm/domain-name/releases/download/v0.3.0/domain-name-v0.3.0.tbz";
      };
      version = "0.3.0";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0sl24yl7j5rmag0nv4zwdvhmisndlm89qc6fwsdiicaffj09mcay";
        package = "packages/dune/dune.1.11.3";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "1lmvsis6dk8mccbwpypz9qdxr134gjhdwshxw6q12mi4x3kn6fn8";
        url = "https://github.com/ocaml/dune/releases/download/1.11.3/dune-build-info-1.11.3.tbz";
      };
      version = "1.11.3";
    };
    dune-configurator = 
    {
      opamInputs = {
                     dune = selection.dune;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lvfavc8dcgqw0xz82yq40fakm22y7x8abirk9hcb7m8l7hp2w95";
        package = "packages/dune-configurator/dune-configurator.1.0.0";
      };
      pname = "dune-configurator";
      src = null;
      version = "1.0.0";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1zahpwp0021xygbwpygrrwa5g65qq6dfqngckb3823ybc6l79lva";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0q1ggc0kn2mmfdhx3ycm9h6dbsj4ix0l8gdalwxb4daq2fc2rpf4";
        package = "packages/fieldslib/fieldslib.v0.12.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "10qn5zx69vqk5453rmpiyy03150hf9i5cs3s6sd2s875p25iqjwq";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/fieldslib-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    fpath = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02mwg1qqjia4jdmp65zhyxssn4rxb6a22s4g3pjh3p5z9v900pja";
        package = "packages/fpath/fpath.0.7.2";
      };
      pname = "fpath";
      src = pkgs.fetchurl 
      {
        sha256 = "1hr05d8bpqmqcfdavn4rjk9rxr7v2zl84866f5knjifrm60sxqic";
        url = "http://erratique.ch/software/fpath/releases/fpath-0.7.2.tbz";
      };
      version = "0.7.2";
    };
    ipaddr = 
    {
      opamInputs = 
      {
        domain-name = selection.domain-name;
        dune = selection.dune;
        macaddr = selection.macaddr;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrp33xvlmwv2fagy2dwv43bhh30w8acfq8ffnbl72f239yzmd8j";
        package = "packages/ipaddr/ipaddr.4.0.0";
      };
      pname = "ipaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    ipaddr-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-cstruct = selection.ipaddr-cstruct or null;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05zd3gp1kyqq2d9h9mqdy1yv6xb4w9r5p5gvn8w4sdzvr0308hqw";
        package = "packages/ipaddr-sexp/ipaddr-sexp.4.0.0";
      };
      pname = "ipaddr-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    js_of_ocaml = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        js_of_ocaml-compiler = selection.js_of_ocaml-compiler;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        uchar = selection.uchar;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1d8fm2xmlyvyllxqkz9dsmfsw1r1pysxzpbrk486qi62w5wjg95r";
        package = "packages/js_of_ocaml/js_of_ocaml.3.4.0";
      };
      pname = "js_of_ocaml";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    js_of_ocaml-compiler = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        ppx_expect = selection.ppx_expect or null;
        yojson = selection.yojson;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1i0jsv5idmc74cxxc4j5d65i9q0rkm1cjm5pf6mj2d9pf3gh4zgy";
        package = "packages/js_of_ocaml-compiler/js_of_ocaml-compiler.3.4.0";
      };
      pname = "js_of_ocaml-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    js_of_ocaml-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphics = selection.graphics or null;
        js_of_ocaml = selection.js_of_ocaml;
        js_of_ocaml-ppx = selection.js_of_ocaml-ppx;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0jyzpail3lpy6kn5vlmb5ykawziqlv3mcpiwdygw6jdsybby1m2q";
        package = "packages/js_of_ocaml-lwt/js_of_ocaml-lwt.3.4.0";
      };
      pname = "js_of_ocaml-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    js_of_ocaml-ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        js_of_ocaml = selection.js_of_ocaml;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1caqmxklsc06ld20v0sdvh2viafnw9n1vb07ba82hlq4r5k6mwb1";
        package = "packages/js_of_ocaml-ppx/js_of_ocaml-ppx.3.4.0";
      };
      pname = "js_of_ocaml-ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    jsonm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dj8ibg6j4r4a7v7g6d6q3h4m23jv3pxwc7nam4zzbc7h2k69dy9";
        package = "packages/jsonm/jsonm.1.0.1";
      };
      pname = "jsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1176dcmxb11fnw49b7yysvkjh0kpzx4s48lmdn5psq9vshp5c29w";
        url = "http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qq838jd97imwxg75xa5gjxfqx07mz8kz31zhyrlyd2n2shfh5ap";
        package = "packages/lwt/lwt.4.3.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "4.3.0";
    };
    lwt_log = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1b4qvc8hazj2n3shdpdi4b5575sgr3iz5zs06iajc6ph8k56hk76";
        package = "packages/lwt_log/lwt_log.1.1.1";
      };
      pname = "lwt_log";
      src = pkgs.fetchurl 
      {
        sha256 = "0gszc8nvk2hpfq47plb36qahlnyfq28sa9mhicnf6mg5c7n1kyql";
        url = "https://github.com/aantron/lwt_log/archive/1.1.1.tar.gz";
      };
      version = "1.1.1";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1r0ka60v07l24ybdm1gj9amwhn6mdrigwgh18im0k9i5xnss90rx";
        package = "packages/lwt_ppx/lwt_ppx.1.2.3";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "1.2.3";
    };
    lwt_react = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l0sqax959gv3649z1vqwf94jvq0bykwydrdjxzk0gjj0nlchfar";
        package = "packages/lwt_react/lwt_react.1.1.3";
      };
      pname = "lwt_react";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "1.1.3";
    };
    macaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1821hajamqh6x2gqb7q4jffzpkljm77wzg561jmcsrl4iqhq0m3y";
        package = "packages/macaddr/macaddr.4.0.0";
      };
      pname = "macaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0d8ici4l55iywi80a5rp2mhzni1ppp16vb9f4zsml1898cd92p7l";
        package = "packages/magic-mime/magic-mime.1.1.2";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1sq4rfd9m3693cnzlbds4qh1xpvrv1iz1s1f75nvacbmfjy0nn8c";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.2/magic-mime-v1.1.2.tbz";
      };
      version = "1.1.2";
    };
    menhir = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1zzngxvs5iv1ri2xrmjawbxw1m8dm949fl4cxr2j0y34wgpbzizj";
        package = "packages/menhir/menhir.20190626";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "0nigjnskg89knyi2zj1w211mb1pvkrwfqpz9a0qbw80k3hm8gg0h";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20190626/archive.tar.gz";
      };
      version = "20190626";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dmp1vfg2212famm3fl7has2i8y9z5jj1f95v1yc2x686livkhz0";
        package = "packages/num/num.1.2";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "1pjkahss0gg5i9v3wwx6inlsz2jd562lv7ah8sbsgx2zj82320n5";
        url = "https://github.com/ocaml/num/archive/v1.2.tar.gz";
      };
      version = "1.2";
    };
    obus = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log;
        lwt_ppx = selection.lwt_ppx;
        lwt_react = selection.lwt_react;
        menhir = selection.menhir;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppxlib = selection.ppxlib;
        xmlm = selection.xmlm;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g58m4d88k428yfcz5pbwi2mkin4ly7xja2fhdqa0jwk3zrrzxl8";
        package = "packages/obus/obus.1.2.0";
      };
      pname = "obus";
      src = pkgs.fetchurl 
      {
        sha256 = "0bbzlschzk5mj2nv5iqqd79g4ljf0w3hnf2s3j6aj9fm0dzp185q";
        url = "https://github.com/ocaml-community/obus/archive/1.2.0.tar.gz";
      };
      version = "1.2.0";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1f2v07fzx7rg0lc8pzs1s24vp49y0jyfxf98b9z57giik28dafgp";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlps6sn5m8lkrnjjp34i145viwwmhq684dn995a7xxf8b3h60d6";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.4.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "1f6kfysppsl2qy1pisgnn9kr0nabwk7xjddmcvi3wyqq0p1bs7r3";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.4.0/ocaml-migrate-parsetree-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    ocaml-system = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:11687h71imdvkyhb28aldhs20czhj7bdpyprk19rbzrnhsqn9ylf";
        package = "packages/ocaml-system/ocaml-system.4.08.1";
      };
      pname = "ocaml-system";
      src = null;
      version = "4.08.1";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nb8z88xhnbz324q14ydlbw8pnrsk5qr3lw34hv0i7bhd9hgk8y9";
        package = "packages/ocplib-endian/ocplib-endian.1.0";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0hwj09rnzjs0m0kazz5h2mgs6p95j0zlga8cda5srnzqmzhniwkn";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.0.tar.gz";
      };
      version = "1.0";
    };
    odoc = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        bisect_ppx = selection.bisect_ppx or null;
        cmdliner = selection.cmdliner;
        cppo = selection.cppo;
        dune = selection.dune;
        fpath = selection.fpath;
        ocaml = selection.ocaml;
        result = selection.result;
        tyxml = selection.tyxml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1hnfj3v2p8xgl7k5qid6v10dh6hw2lmr9svvzmg9aqn5r58vx4f1";
        package = "packages/odoc/odoc.1.4.2";
      };
      pname = "odoc";
      src = pkgs.fetchurl 
      {
        sha256 = "1xlbjfamji1ii0qn0b5lfml04m2ldfjn54l44wf7qzw6pdfddnr1";
        url = "https://github.com/ocaml/odoc/archive/1.4.2.tar.gz";
      };
      version = "1.4.2";
    };
    parsexp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hry8mwm4vz45ad1xwsnbmhpb78rqfi3kdg2jfzrfngyd7449q6m";
        package = "packages/parsexp/parsexp.v0.12.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0m1gszjczhy6bx6pyayssjbv89xj7bv544p65v93bsy78gk7cqfc";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/parsexp-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0pm6jyhifwb210lsvmhjyiv0lxakv6bsq4ma1zq4zid7qbxq0xa2";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.12.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0qk9z2q340ssjq6lk9zvnnpgxiv21n2lhg23679wbib782ipzgj9";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_fields_conv-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jg4mnp3zbm6n4skdw38id29hfr8a95zmdbssph72kp9bd0isk1v";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.12.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0980xzjhqdjdi2lxx5jgnzjppsnkb915w9y962ip4q92y1jlhx3b";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_conv-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rg0yfsacna7zadxin9s1qkaga940kvsffaxmdvn4y0f923xnpcn";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.2.3";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "11ac52fg8bbsgsqxinj1qxm7gp9j52d4fal3696yxsrb6hwcfcpi";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.2.3.tar.gz";
      };
      version = "5.2.3";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j76k80gpy9fjqva2jz09z37mwzphayfk3h14h6bibb5pn0vp37r";
        package = "packages/ppxlib/ppxlib.0.8.1";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "08bm5wplqwxkzzwlc6wbcs4yyarqhllpzi2vnq207a5vhgp7kjx5";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.8.1/ppxlib-0.8.1.tbz";
      };
      version = "0.8.1";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    react = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wk5i83r2hxz1r1skkhzz8rild68m4g9i9blxigbg9r60hgw18z5";
        package = "packages/react/react.1.2.1";
      };
      pname = "react";
      src = pkgs.fetchurl 
      {
        sha256 = "1aj8w79gdd9xnrbz7s5p8glcb4pmimi8jp9f439dqnf6ih3mqb3v";
        url = "http://erratique.ch/software/react/releases/react-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    remocaml = 
    {
      buildInputs = [ (pkgs.sassc) ];
      opamInputs = 
      {
        cohttp-lwt = selection.cohttp-lwt;
        cohttp-lwt-unix = selection.cohttp-lwt-unix;
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_react = selection.lwt_react;
        obus = selection.obus;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        rresult = selection.rresult;
        vdoml = selection.vdoml;
      };
      opamSrc = "remocaml.opam";
      pname = "remocaml";
      src = self.directSrc "remocaml";
      version = "development";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:159gmr00z6jmpxvk83vnv738ls4kbzfn8p5042i87m6p8damaxhc";
        package = "packages/result/result.1.4";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "1cjlncnzkwc6zr4v8dgy8nin490blbyxzwwp0qh0cla7s3q2jw0n";
        url = "https://github.com/janestreet/result/archive/1.4.tar.gz";
      };
      version = "1.4";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:01i4kprhjs1m0hln9yq8ircb0h2rrphz2aqydgjwylq19fgag1jq";
        package = "packages/sexplib/sexplib.v0.12.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl 
      {
        sha256 = "0zw2b7nrq1rk4si6wjfwdjvijipr6wdh3y9lg1cddd0fsfvi2jy5";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1wmx06rc4llv6g9lkl761v4by06l3wl3isz87sp7lfhmjkwakra8";
        package = "packages/sexplib0/sexplib0.v0.12.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "1cz02zhhz420wawjxxc3f45azjxsah01d5zh0k58ycbqxi8g7lh0";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib0-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06ckzha5cr5xj615ng433ghmn242ixqhwdkwa9nf7ijcyikk9bfi";
        package = "packages/stdio/stdio.v0.12.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "11dvr5gqza3raxgrby6b1c3mxy4zhvqrqvqa4hkyqqg0a8x8ffa0";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/stdio-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l6bfv426xb77qfiv880yy8dcscb2hi5703n9dj32fa3mlxnbg42";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        qtest = selection.qtest or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xwbkf7mwwh10s3y2v6badjzcsjz7vzx22rc37dvfd77vgw03vdg";
        package = "packages/topkg/topkg.1.0.1";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "18ysdrd665mhvzqp3s86kymkd1vl6qm7kakzda1h6mr4mnkawi00";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    tyxml = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        re = selection.re;
        seq = selection.seq;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:103mwkp71agz9qww8a1q99hdl3zs6gkjiv8sbhrj70plcdricvw7";
        package = "packages/tyxml/tyxml.4.3.0";
      };
      pname = "tyxml";
      src = pkgs.fetchurl 
      {
        sha256 = "1hxzppfvsdls2y8qiwvz31hmffzh2hgglf01am1vzf2f31mxf6vf";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.3.0/tyxml-4.3.0.tbz";
      };
      version = "4.3.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        re = selection.re;
        stringext = selection.stringext;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:120k610kny9mx7ya57x417r3lgyvpczic34xypws8xl4fv6jm1vi";
        package = "packages/uri/uri.3.0.0";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "1yhrgm3hbn0hh4jdmcrvxinazgg8vrm0vn425sg8ggzblvxk9cwg";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.0.0/uri-v3.0.0.tbz";
      };
      version = "3.0.0";
    };
    uri-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1s87f9cqdgrgbj5sdbvl7flkdyf0kazcpylv3dqjs51p4abdap0h";
        package = "packages/uri-sexp/uri-sexp.3.0.0";
      };
      pname = "uri-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "1yhrgm3hbn0hh4jdmcrvxinazgg8vrm0vn425sg8ggzblvxk9cwg";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.0.0/uri-v3.0.0.tbz";
      };
      version = "3.0.0";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    vdoml = 
    {
      opamInputs = 
      {
        conf-python-2-7 = selection.conf-python-2-7;
        dune = selection.dune;
        js_of_ocaml = selection.js_of_ocaml;
        js_of_ocaml-lwt = selection.js_of_ocaml-lwt;
        js_of_ocaml-ppx = selection.js_of_ocaml-ppx;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        odoc = selection.odoc;
        ppx_assert = selection.ppx_assert or null;
        ppx_inline_test = selection.ppx_inline_test or null;
        sexplib = selection.sexplib or null;
      };
      opamSrc = "vdoml.opam";
      pname = "vdoml";
      src = self.directSrc "vdoml";
      version = "development";
    };
    xmlm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1sllk1bcqdbb67fcimwb9j4z8n0z1z49aqgy65vwsigzymmnjz14";
        package = "packages/xmlm/xmlm.1.3.0";
      };
      pname = "xmlm";
      src = pkgs.fetchurl 
      {
        sha256 = "1rrdxg5kh9zaqmgapy9bhdqyxbbvxxib3bdfg1vhw4rrkp1z0x8n";
        url = "http://erratique.ch/software/xmlm/releases/xmlm-1.3.0.tbz";
      };
      version = "1.3.0";
    };
    yojson = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vxmg1yiwh1wgxwwqzfrvaaff4wxanakq2yap1s2x3h54fqakkza";
        package = "packages/yojson/yojson.1.7.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "1iich6323npvvs8r50lkr4pxxqm9mf6w67cnid7jg1j1g5gwcvv5";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz";
      };
      version = "1.7.0";
    };
  };
}

